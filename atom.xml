<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Michele Degges]]></title>
  <link href="http://mdeggies.github.io/blog/atom.xml" rel="self"/>
  <link href="http://mdeggies.github.io/blog/"/>
  <updated>2016-03-22T23:27:37-07:00</updated>
  <id>http://mdeggies.github.io/blog/</id>
  <author>
    <name><![CDATA[Michele Degges]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
    <title type="html"><![CDATA[technical challenge]]></title>
    <link href="http://mdeggies.github.io/blog/blog/2016/03/09/technical-challenge/"/>
    
    <updated>2016-03-09T20:38:32-08:00</updated>
    <id>http://mdeggies.github.io/blog/blog/2016/03/09/technical-challenge</id>
    
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/17k3QJq.jpg?1" alt="Challenge" /></p>

<p>After applying to a few startups on Angellist, I was super excited to have gotten through my very first phone interview. At the end of the call, the HR rep scheduled me for a technical challenge. He said I would have up to 24 hours to complete the challenge, but that I&rsquo;d have to check in at the 2 hour mark and report my progress. I would be assessed on both the first draft of my code at the 2 hour mark, and the final version.</p>

<p>The task was pretty straightforward: to create a game in the language I felt most comfortable in. Since I applied for a backend position, I wasn&rsquo;t supposed to create any front-end or accept any user input. The program was supposed to simulate the turns taken by players and have a function to print out the board in ASCII.</p>

<p>Now.. this was a pretty challenging task for me. I got the basic version down, but it took me about 4 hours to complete and another hour of debugging before I felt comfortable enough to submit the final version. Here&rsquo;s what I learned from the whole process:</p>

<h2>Don&rsquo;t freak out!</h2>

<p>Once I got the challenge emailed to me, I set an alarm for 2 hours. While this helped me keep track of my time, it also made me really anxious as I saw the minutes slipping by. I would have gotten further along much faster if I didn&rsquo;t obsessively check the time every five minutes.</p>

<h2>Find a quiet place to work</h2>

<p>When living in a house with 20 other people, it&rsquo;s hard to find a quiet place to think, let alone code. My advice is: either lock yourself in your room and ask your roommates not to bother you, or get out of the house for a few hours. I ended up on a park bench for my last- and most productive- hour.</p>

<h2>Hit MVP before trying to get fancy</h2>

<p>Everyone always says to hit MVP first before trying anything fancy, even if your MVP is the most obnoxious piece of code you&rsquo;ve ever written. Now I know why I keep hearing this- it&rsquo;s the best piece of advice out there. Get <strong>something</strong> working and then revise if you have any time left. If not.. you won&rsquo;t have anything working to show for all of your hard work. To reiterate: <strong>GET SOMETHING WORKING!</strong></p>

<p>I didn&rsquo;t take my own advice on this one, and I ended up wasting a lot of time trying to debug a function that just wasn&rsquo;t working. At my two hour check-in, I barely had any working code to show.</p>

<h2>If you don&rsquo;t have time..</h2>

<p>Sometimes there just isn&rsquo;t enough time to refactor. I submitted the final version of this challenge about 5:30 hours in. It isn&rsquo;t fancy- actually, it barely hits MVP- but it works.</p>

<p>I had a lot going on- I had another in-person interview to prepare for, I had to continue working on another piece of code that my team needed to present the next day, and I was just plain exhausted from coding so much.</p>

<h2>Are you sure you want to submit?</h2>

<p>The thing is- I probably could have created a more elegant solution if I had spent more time on it. That&rsquo;s the thing about coding: it&rsquo;s impossible not to improve. The more time you spend coding, the better you get, the smarter you become.</p>

<p>I did have the full 24 hours to finish the challenge, but I submitted at around the 6 hour mark. In hindsight, I should have slept on it for a few hours and woken up to work on it the next day with a fresh pair of eyes. I was afraid that taking all of the allotted time would reflect negatively on my abilities, but you know what- I think it&rsquo;s better to take more time to submit something you can be proud of than to submit the bare minimum and regret it all week.</p>

<h2>My solution</h2>

<p>I&rsquo;m not very proud of my code, nor am I happy with how far I got on this challenge, because I really did just barely get MVP. I don&rsquo;t expect this to land me the job I was going for. In fact, I will be suuuper surprised if I get any reply back from that HR guy, but that&rsquo;s part of the reason I&rsquo;m posting this now.</p>

<h2>This is honestly the skill level I&rsquo;m at right now</h2>

<p>This is how I code. This is truly a reflection of where I&rsquo;m at. Sometimes it takes me forever to get anywhere (like it did with this challenge). Sometimes it takes me minutes. That&rsquo;s how it is for us stone-cold beginners. But you know what&hellip; that&rsquo;s okay! I&rsquo;m getting there, and you&rsquo;ll get there too. With each new challenge we take on and refuse to give up on, we get better and better. We shave minutes off of our time. We&rsquo;re able to think more logically and efficiently. And most of all, we can feel proud of ourselves because we really did try our hardest.. and we didn&rsquo;t give up!</p>

<p>If you have any questions, feel free to hit me up at mdeggies@gmail.com, or message me on twitter.</p>

<p><a href="https://twitter.com/mdeggies" class="twitter-follow-button" data-show-count="false" data-size="large">Follow @mdeggies</a></p>

<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>

]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Integrating Jekyll with gh-pages]]></title>
    <link href="http://mdeggies.github.io/blog/blog/2016/03/02/integrating-jekyll-with-gh-pages/"/>
    
    <updated>2016-03-02T00:29:36-08:00</updated>
    <id>http://mdeggies.github.io/blog/blog/2016/03/02/integrating-jekyll-with-gh-pages</id>
    
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/bkedmGD.png?1" alt="Octopress" /></p>

<p>Integrating <a href="https://jekyllrb.com/">Jekyll</a> with <a href="https://pages.github.com/">gh-pages</a> shouldn&rsquo;t take more than 15 minutes. The idea is simple: you already have a personal website hosted on yourusername.github.io. The goal is to create a blog and host it on yourusername.github.io/blog. Sounds easy, right?!</p>

<p>Well, not so fast.. Jekyll and gh-pages are not the stellar, easy-going couple that they claim to be. Integrating the two- especially when you already have a static site at yourusername.github.io- is not such an easy task.</p>

<p>In comes <a href="http://octopress.org/">Octopress</a>! Octopress is a static blogging framework built on top of Jekyll. It&rsquo;s supposed to allow for easy integration and deployment. I was so excited when I found out it existed.. but then I started reading through it&rsquo;s documentation and my excitement fizzled out pretty quick.</p>

<h2>The goal</h2>

<p>We know the goal- to get a blog up and running on gh-pages- specifically, <a href="https://help.github.com/articles/creating-project-pages-manually/">gh project pages</a>- since we already have a site at yourusername.github.io</p>

<h2>The steps</h2>

<p>First, create a new repo on github.com called blog. This is where our octopress site will live. Copy the location (<a href="https://github.com/yourusername/blog.git">https://github.com/yourusername/blog.git</a>).</p>

<p>In your terminal, navigate to the directory you want to create and edit your blog project in. In that directory, perform these commands:</p>

<ul>
<li>git clone git://github.com/imathis/octopress.git blog</li>
<li>cd blog</li>
<li>git init</li>
<li>git add .</li>
<li>git remote add origin <a href="https://github.com/yourusername/blog.git">https://github.com/yourusername/blog.git</a></li>
<li>git commit -m &ldquo;initializing octopress&rdquo;</li>
<li>git push origin master</li>
</ul>


<p>You&rsquo;ve just initialized your blog project with Octopress! Now let&rsquo;s set everything up:</p>

<ul>
<li>gem install bundler</li>
<li>bundle install</li>
<li>rake setup_github_pages</li>
</ul>


<p>At this point, you&rsquo;ll be asked to give a repository url. Use the same url you copied from github (<a href="https://github.com/yourusername/blog.git">https://github.com/yourusername/blog.git</a>)</p>

<ul>
<li>git config branch.master.remote origin</li>
<li>rake install</li>
<li>rake generate</li>
<li>rake deploy</li>
<li>rake preview</li>
</ul>


<p>Rake install will install the default Octopress theme on your site. Generate and deploy will get it running, and preview will allow you to preview your site locally at localhost:4000</p>

<h2>HOLD UP!!</h2>

<p>There&rsquo;s one last step you need to follow to get your blog up and running! Navigate to the _config.yml file in the root of your blog project. In addition to changing the default info in &lsquo;Main Configs&rsquo; to your info (url will be <a href="https://yourusername.github.io/blog">https://yourusername.github.io/blog</a> - title will be whatever you want - author will be your name - etc) you must do one more thing!</p>

<p>Navigate to the &lsquo;Jekyll &amp; Plugins&rsquo; section. Change the option</p>

<h5>root: /</h5>

<p>to</p>

<h5>root: /blog</h5>

<p>This will point the root url of your site to the correct page. Don&rsquo;t forget to do this step, or none of your styling will be visible (as you will be doing GET requests to the wrong urls!)</p>

<p>After adding, committing, and pushing your changes to github, you&rsquo;ll be able to view your blog at yourusername.github.io/blog</p>

<h2>Optionally install a new theme</h2>

<p>To install a new theme, such as ioveracker&rsquo;s <a href="https://github.com/ioveracker/mnml">MNML</a>, follow these steps:</p>

<ul>
<li>git clone git://github.com/ioveracker/mnml.git .themes/mnml</li>
<li>rake install[&lsquo;mnml&rsquo;]</li>
<li>rake generate</li>
<li>rake deploy</li>
<li>rake preview</li>
</ul>


<h2>And that&rsquo;s how it&rsquo;s done</h2>

<p>As always, don&rsquo;t forget to git add . &amp;&amp; git commit -m &ldquo;updating site..&rdquo; &amp;&amp; git push -u origin master to save your changes and make them visible at yourusername.github.io/blog</p>

<p>If you have any questions, feel free to hit me up at mdeggies@gmail.com, or message me on twitter.</p>

<p><a href="https://twitter.com/mdeggies" class="twitter-follow-button" data-show-count="false" data-size="large">Follow @mdeggies</a></p>

<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>

]]></content>
    
  </entry>
  
</feed>